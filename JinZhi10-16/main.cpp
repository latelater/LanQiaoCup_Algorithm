//问题描述
//　　十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。
//　　给出一个非负整数，将它表示成十六进制的形式。
//输入格式
//　　输入包含一个非负整数a，表示要转换的数。0<=a<=2147483647
//输出格式
//　　输出这个整数的16进制表示
//样例输入
//30
//样例输出
//1E

//整数部分，就是指小数点前的位数，除以16取余数，然后把所得数写成得数＋余数；
//小数点后的部分，要乘以16，依次写出来就可以了

#include<iostream>
using namespace std;

void swap(int x){
    char *arr;
    arr = new char[8];
    if(x == 0) cout<<0;//此处为当x = 0时的处理

    int a, i = 0;
    char b;
    while(x >= 1){

        if(x%16 > 9 && x%16 < 16){
            b = x%16 - 10 + 'A';
        }

        if(x%16 <= 9 && x%16 >= 0){
            b = x%16 + '0';
        }
        x = x/16;
        arr[i] = b;
        i++;
    }
    for(int j = i-1; j >= 0; j--){
        cout<<arr[j];
    }
}

int main(){
    int x;
    cin>>x;
    swap(x);
    return 0;
}
